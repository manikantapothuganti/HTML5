package com.stackroute.datamunger.reader;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

import com.stackroute.datamunger.query.DataTypeDefinitions;
import com.stackroute.datamunger.query.Header;

public class CsvQueryProcessor extends QueryProcessingEngine {
	private String fileName;
	// Parameterized constructor to initialize filename
	public CsvQueryProcessor(String fileName) throws FileNotFoundException {
		this.fileName = fileName; 

	}

	/*
	 * Implementation of getHeader() method. We will have to extract the headers
	 * from the first line of the file.
	 * Note: Return type of the method will be Header
	 */
	
	@Override
	public Header getHeader() throws IOException {
		BufferedReader br = new BufferedReader(new FileReader(fileName));
		// read the first line
		String str = br.readLine();
		br.close();
		String headers[]= str.trim().split(",");
		// populate the header object with the String array containing the header names
		Header header = new Header(headers);
		return header;
	}

	/**
	 * getDataRow() method will be used in the upcoming assignments
	 */
	
	@Override
	public void getDataRow() {

	}

	/*
	 * Implementation of getColumnType() method. To find out the data types, we will
	 * read the first line from the file and extract the field values from it. If a
	 * specific field value can be converted to Integer, the data type of that field
	 * will contain "java.lang.Integer", otherwise if it can be converted to Double,
	 * then the data type of that field will contain "java.lang.Double", otherwise,
	 * the field is to be treated as String. 
	 * Note: Return Type of the method will be DataTypeDefinitions
	 */
	
	@Override
	public DataTypeDefinitions getColumnType() throws IOException {
		BufferedReader br = new BufferedReader(new FileReader(fileName));
		String header = br.readLine();
		String firstRow = br.readLine();
		br.close();
		String[] headerArray = header.split(",");
        String []firstRowArray = firstRow.trim().split(",");
        String[] dataTypeArray = new String[headerArray.length];
        if(headerArray.length!=firstRowArray.length) {
            String temp=" ";
            for(int i=firstRowArray.length;i<headerArray.length;i++)
                dataTypeArray[i]= temp.getClass().getName();
        }
		for(int i=0;i<firstRowArray.length;i++) {
			 try {
	                Integer a = Integer.parseInt(firstRowArray[i]);
	                dataTypeArray[i]=a.getClass().getName();
	            }
	            catch(NumberFormatException e){
	                try {
	                Double a = Double.parseDouble(firstRowArray[i]);
	                dataTypeArray[i]=a.getClass().getName();
	                }
	                catch(Exception ee) {
	                    dataTypeArray[i]=firstRowArray[i].getClass().getName();
	                }
	            }
		}
		DataTypeDefinitions dataTypeDefinitions = new DataTypeDefinitions(dataTypeArray);
		return dataTypeDefinitions;
	}
}
